{"ast":null,"code":"'use strict';\n\nvar createMarkupForStyles = require('./create-markup-for-styles');\n\nvar Prefixer = require('./prefixer');\n\nvar ExecutionEnvironment = require('exenv');\n\nvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\nvar animationIndex = 1;\nvar animationStyleSheet = null;\nvar keyframesPrefixed = 'keyframes';\n\nif (isAnimationSupported) {\n  animationStyleSheet = document.createElement('style');\n  document.head.appendChild(animationStyleSheet); // Test if prefix needed for keyframes (copied from PrefixFree)\n\n  animationStyleSheet.textContent = '@keyframes {}';\n\n  if (!animationStyleSheet.sheet.cssRules.length) {\n    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n  }\n} // Simple animation helper that injects CSS into a style object containing the\n// keyframes, and returns a string with the generated animation name.\n\n\nvar keyframes = function keyframes(keyframeRules, component) {\n  var name = 'Animation' + animationIndex;\n  animationIndex += 1;\n\n  if (!isAnimationSupported) {\n    return name;\n  }\n\n  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n    var props = keyframeRules[percentage];\n    var prefixedProps = Prefixer.getPrefixedStyle(component, props, 'css');\n    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n  }).join('\\n') + '\\n}\\n'; // for flow\n\n  /* istanbul ignore next */\n\n  if (!animationStyleSheet) {\n    throw new Error('keyframes not initialized properly');\n  }\n\n  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n  return name;\n};\n\nmodule.exports = keyframes;","map":{"version":3,"sources":["D:/Web-Development/Anita/proj_v1/webolution/node_modules/radium/lib/keyframes.js"],"names":["createMarkupForStyles","require","Prefixer","ExecutionEnvironment","isAnimationSupported","canUseDOM","getPrefixedPropertyName","animationIndex","animationStyleSheet","keyframesPrefixed","document","createElement","head","appendChild","textContent","sheet","cssRules","length","cssPrefix","keyframes","keyframeRules","component","name","rule","Object","keys","map","percentage","props","prefixedProps","getPrefixedStyle","serializedProps","join","Error","insertRule","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,qBAAqB,GAAGC,OAAO,CAAC,4BAAD,CAAnC;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,OAAD,CAAlC;;AAEA,IAAIG,oBAAoB,GAAGD,oBAAoB,CAACE,SAArB,IAAkCH,QAAQ,CAACI,uBAAT,CAAiC,WAAjC,MAAkD,KAA/G;AAEA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,mBAAmB,GAAG,IAA1B;AACA,IAAIC,iBAAiB,GAAG,WAAxB;;AAEA,IAAIL,oBAAJ,EAA0B;AACxBI,EAAAA,mBAAmB,GAAGE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtB;AACAD,EAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BL,mBAA1B,EAFwB,CAIxB;;AACAA,EAAAA,mBAAmB,CAACM,WAApB,GAAkC,eAAlC;;AACA,MAAI,CAACN,mBAAmB,CAACO,KAApB,CAA0BC,QAA1B,CAAmCC,MAAxC,EAAgD;AAC9CR,IAAAA,iBAAiB,GAAGP,QAAQ,CAACgB,SAAT,GAAqB,WAAzC;AACD;AACF,C,CAED;AACA;;;AACA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,aAAnB,EAAkCC,SAAlC,EAA6C;AAC3D,MAAIC,IAAI,GAAG,cAAcf,cAAzB;AACAA,EAAAA,cAAc,IAAI,CAAlB;;AAEA,MAAI,CAACH,oBAAL,EAA2B;AACzB,WAAOkB,IAAP;AACD;;AAED,MAAIC,IAAI,GAAG,MAAMd,iBAAN,GAA0B,GAA1B,GAAgCa,IAAhC,GAAuC,MAAvC,GAAgDE,MAAM,CAACC,IAAP,CAAYL,aAAZ,EAA2BM,GAA3B,CAA+B,UAAUC,UAAV,EAAsB;AAC9G,QAAIC,KAAK,GAAGR,aAAa,CAACO,UAAD,CAAzB;AACA,QAAIE,aAAa,GAAG3B,QAAQ,CAAC4B,gBAAT,CAA0BT,SAA1B,EAAqCO,KAArC,EAA4C,KAA5C,CAApB;AACA,QAAIG,eAAe,GAAG/B,qBAAqB,CAAC6B,aAAD,EAAgB,IAAhB,CAA3C;AACA,WAAO,OAAOF,UAAP,GAAoB,QAApB,GAA+BI,eAA/B,GAAiD,OAAxD;AACD,GAL0D,EAKxDC,IALwD,CAKnD,IALmD,CAAhD,GAKK,OALhB,CAR2D,CAe3D;;AACA;;AACA,MAAI,CAACxB,mBAAL,EAA0B;AACxB,UAAM,IAAIyB,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAEDzB,EAAAA,mBAAmB,CAACO,KAApB,CAA0BmB,UAA1B,CAAqCX,IAArC,EAA2Cf,mBAAmB,CAACO,KAApB,CAA0BC,QAA1B,CAAmCC,MAA9E;AACA,SAAOK,IAAP;AACD,CAvBD;;AAyBAa,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["'use strict';\n\nvar createMarkupForStyles = require('./create-markup-for-styles');\nvar Prefixer = require('./prefixer');\n\nvar ExecutionEnvironment = require('exenv');\n\nvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\n\nvar animationIndex = 1;\nvar animationStyleSheet = null;\nvar keyframesPrefixed = 'keyframes';\n\nif (isAnimationSupported) {\n  animationStyleSheet = document.createElement('style');\n  document.head.appendChild(animationStyleSheet);\n\n  // Test if prefix needed for keyframes (copied from PrefixFree)\n  animationStyleSheet.textContent = '@keyframes {}';\n  if (!animationStyleSheet.sheet.cssRules.length) {\n    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n  }\n}\n\n// Simple animation helper that injects CSS into a style object containing the\n// keyframes, and returns a string with the generated animation name.\nvar keyframes = function keyframes(keyframeRules, component) {\n  var name = 'Animation' + animationIndex;\n  animationIndex += 1;\n\n  if (!isAnimationSupported) {\n    return name;\n  }\n\n  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n    var props = keyframeRules[percentage];\n    var prefixedProps = Prefixer.getPrefixedStyle(component, props, 'css');\n    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n  }).join('\\n') + '\\n}\\n';\n\n  // for flow\n  /* istanbul ignore next */\n  if (!animationStyleSheet) {\n    throw new Error('keyframes not initialized properly');\n  }\n\n  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n  return name;\n};\n\nmodule.exports = keyframes;"]},"metadata":{},"sourceType":"script"}