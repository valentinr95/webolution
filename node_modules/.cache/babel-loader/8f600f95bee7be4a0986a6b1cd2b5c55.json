{"ast":null,"code":"\"use strict\";\n\nvar allPrintStyles = {};\nvar listeners = [];\n\nvar subscribe = function subscribe(listener) {\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n\n  return {\n    remove: function remove() {\n      var listenerIndex = listeners.indexOf(listener);\n\n      if (listenerIndex > -1) {\n        listeners.splice(listenerIndex, 1);\n      }\n    }\n  };\n};\n\nvar _emitChange = function _emitChange() {\n  listeners.forEach(function (listener) {\n    return listener();\n  });\n};\n\nvar _appendImportantToEachValue = function _appendImportantToEachValue(styleObj) {\n  var importantStyleObj = {};\n  Object.keys(styleObj).forEach(function (key) {\n    var value = styleObj[key]; // This breaks unitless values but they'll be deprecated soon anyway\n    // https://github.com/facebook/react/issues/1873\n\n    value = value + \" !important\";\n    importantStyleObj[key] = value;\n  });\n  return importantStyleObj;\n};\n\nvar addPrintStyles = function addPrintStyles(Component) {\n  if (!Component.printStyles) {\n    return;\n  }\n\n  var printStyleClass = {};\n  Object.keys(Component.printStyles).forEach(function (key) {\n    var styles = Component.printStyles[key];\n    var className = \"Radium-\" + Component.displayName + \"-\" + key;\n    allPrintStyles[\".\" + className] = _appendImportantToEachValue(styles);\n    printStyleClass[key] = className;\n  }); // Allows for lazy loading of JS that then calls Radium to update the\n  // print styles\n\n  _emitChange();\n\n  return printStyleClass;\n};\n\nvar getPrintStyles = function getPrintStyles() {\n  return allPrintStyles;\n};\n\nmodule.exports = {\n  addPrintStyles: addPrintStyles,\n  getPrintStyles: getPrintStyles,\n  subscribe: subscribe\n};","map":{"version":3,"sources":["D:/Web-Development/Anita/proj_v1/webolution/node_modules/radium/lib/print-styles.js"],"names":["allPrintStyles","listeners","subscribe","listener","indexOf","push","remove","listenerIndex","splice","_emitChange","forEach","_appendImportantToEachValue","styleObj","importantStyleObj","Object","keys","key","value","addPrintStyles","Component","printStyles","printStyleClass","styles","className","displayName","getPrintStyles","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAG,EAArB;AACA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAC3C,MAAIF,SAAS,CAACG,OAAV,CAAkBD,QAAlB,MAAgC,CAAC,CAArC,EAAwC;AACtCF,IAAAA,SAAS,CAACI,IAAV,CAAeF,QAAf;AACD;;AAED,SAAO;AACLG,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,aAAa,GAAGN,SAAS,CAACG,OAAV,CAAkBD,QAAlB,CAApB;;AAEA,UAAII,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtBN,QAAAA,SAAS,CAACO,MAAV,CAAiBD,aAAjB,EAAgC,CAAhC;AACD;AACF;AAPI,GAAP;AASD,CAdD;;AAgBA,IAAIE,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCR,EAAAA,SAAS,CAACS,OAAV,CAAkB,UAAUP,QAAV,EAAoB;AACpC,WAAOA,QAAQ,EAAf;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIQ,2BAA2B,GAAG,SAASA,2BAAT,CAAqCC,QAArC,EAA+C;AAC/E,MAAIC,iBAAiB,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBF,OAAtB,CAA8B,UAAUM,GAAV,EAAe;AAC3C,QAAIC,KAAK,GAAGL,QAAQ,CAACI,GAAD,CAApB,CAD2C,CAG3C;AACA;;AACAC,IAAAA,KAAK,GAAGA,KAAK,GAAG,aAAhB;AACAJ,IAAAA,iBAAiB,CAACG,GAAD,CAAjB,GAAyBC,KAAzB;AACD,GAPD;AASA,SAAOJ,iBAAP;AACD,CAbD;;AAeA,IAAIK,cAAc,GAAG,SAASA,cAAT,CAAwBC,SAAxB,EAAmC;AACtD,MAAI,CAACA,SAAS,CAACC,WAAf,EAA4B;AAC1B;AACD;;AAED,MAAIC,eAAe,GAAG,EAAtB;AAEAP,EAAAA,MAAM,CAACC,IAAP,CAAYI,SAAS,CAACC,WAAtB,EAAmCV,OAAnC,CAA2C,UAAUM,GAAV,EAAe;AACxD,QAAIM,MAAM,GAAGH,SAAS,CAACC,WAAV,CAAsBJ,GAAtB,CAAb;AACA,QAAIO,SAAS,GAAG,YAAYJ,SAAS,CAACK,WAAtB,GAAoC,GAApC,GAA0CR,GAA1D;AACAhB,IAAAA,cAAc,CAAC,MAAMuB,SAAP,CAAd,GAAkCZ,2BAA2B,CAACW,MAAD,CAA7D;AACAD,IAAAA,eAAe,CAACL,GAAD,CAAf,GAAuBO,SAAvB;AACD,GALD,EAPsD,CActD;AACA;;AACAd,EAAAA,WAAW;;AACX,SAAOY,eAAP;AACD,CAlBD;;AAoBA,IAAII,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7C,SAAOzB,cAAP;AACD,CAFD;;AAIA0B,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,cAAc,EAAEA,cADD;AAEfO,EAAAA,cAAc,EAAEA,cAFD;AAGfvB,EAAAA,SAAS,EAAEA;AAHI,CAAjB","sourcesContent":["\"use strict\";\n\nvar allPrintStyles = {};\nvar listeners = [];\n\nvar subscribe = function subscribe(listener) {\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n\n  return {\n    remove: function remove() {\n      var listenerIndex = listeners.indexOf(listener);\n\n      if (listenerIndex > -1) {\n        listeners.splice(listenerIndex, 1);\n      }\n    }\n  };\n};\n\nvar _emitChange = function _emitChange() {\n  listeners.forEach(function (listener) {\n    return listener();\n  });\n};\n\nvar _appendImportantToEachValue = function _appendImportantToEachValue(styleObj) {\n  var importantStyleObj = {};\n\n  Object.keys(styleObj).forEach(function (key) {\n    var value = styleObj[key];\n\n    // This breaks unitless values but they'll be deprecated soon anyway\n    // https://github.com/facebook/react/issues/1873\n    value = value + \" !important\";\n    importantStyleObj[key] = value;\n  });\n\n  return importantStyleObj;\n};\n\nvar addPrintStyles = function addPrintStyles(Component) {\n  if (!Component.printStyles) {\n    return;\n  }\n\n  var printStyleClass = {};\n\n  Object.keys(Component.printStyles).forEach(function (key) {\n    var styles = Component.printStyles[key];\n    var className = \"Radium-\" + Component.displayName + \"-\" + key;\n    allPrintStyles[\".\" + className] = _appendImportantToEachValue(styles);\n    printStyleClass[key] = className;\n  });\n\n  // Allows for lazy loading of JS that then calls Radium to update the\n  // print styles\n  _emitChange();\n  return printStyleClass;\n};\n\nvar getPrintStyles = function getPrintStyles() {\n  return allPrintStyles;\n};\n\nmodule.exports = {\n  addPrintStyles: addPrintStyles,\n  getPrintStyles: getPrintStyles,\n  subscribe: subscribe\n};"]},"metadata":{},"sourceType":"script"}