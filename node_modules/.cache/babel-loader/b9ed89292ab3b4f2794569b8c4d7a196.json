{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\Anita\\\\proj_v2\\\\webolution_semantic_ui\\\\src\\\\components\\\\ContactForm.jsx\";\nimport React from \"react\";\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const {\n      status\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitForm,\n      action: \"https://formspree.io/mwkrzvgd\",\n      method: \"POST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Message:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), status === \"SUCCESS\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }\n    }, \"Thanks!\") : /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 50\n      }\n    }, \"Submit\"), status === \"ERROR\" && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }\n    }, \"Ooops! There was an error.\"));\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({\n          status: \"SUCCESS\"\n        });\n      } else {\n        this.setState({\n          status: \"ERROR\"\n        });\n      }\n    };\n\n    xhr.send(data);\n  }\n\n}","map":{"version":3,"sources":["D:/Web-Development/Anita/proj_v2/webolution_semantic_ui/src/components/ContactForm.jsx"],"names":["React","MyForm","Component","constructor","props","submitForm","bind","state","status","render","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACE;AACE,MAAA,QAAQ,EAAE,KAAKF,UADjB;AAEE,MAAA,MAAM,EAAC,+BAFT;AAGE,MAAA,MAAM,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUGG,MAAM,KAAK,SAAX,gBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvB,gBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAV3C,EAWGA,MAAM,KAAK,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAXzB,CADF;AAeD;;AAEDH,EAAAA,UAAU,CAACK,EAAD,EAAK;AACbA,IAAAA,EAAE,CAACC,cAAH;AACA,UAAMC,IAAI,GAAGF,EAAE,CAACG,MAAhB;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAb;AACA,UAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,IAAJ,CAASN,IAAI,CAACO,MAAd,EAAsBP,IAAI,CAACQ,MAA3B;AACAJ,IAAAA,GAAG,CAACK,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;;AACAL,IAAAA,GAAG,CAACM,kBAAJ,GAAyB,MAAM;AAC7B,UAAIN,GAAG,CAACO,UAAJ,KAAmBN,cAAc,CAACO,IAAtC,EAA4C;;AAC5C,UAAIR,GAAG,CAACR,MAAJ,KAAe,GAAnB,EAAwB;AACtBI,QAAAA,IAAI,CAACa,KAAL;AACA,aAAKC,QAAL,CAAc;AAAElB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAHD,MAGO;AACL,aAAKkB,QAAL,CAAc;AAAElB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KARD;;AASAQ,IAAAA,GAAG,CAACW,IAAJ,CAASb,IAAT;AACD;;AA7CiD","sourcesContent":["import React from \"react\";\r\n\r\nexport default class MyForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n      <form\r\n        onSubmit={this.submitForm}\r\n        action=\"https://formspree.io/mwkrzvgd\"\r\n        method=\"POST\"\r\n      >\r\n\r\n        <label>Email:</label>\r\n        <input type=\"email\" name=\"email\" />\r\n        <label>Message:</label>\r\n        <input type=\"text\" name=\"message\" />\r\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\r\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}